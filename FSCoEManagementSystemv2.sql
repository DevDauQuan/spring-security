/* ---------------------------------------------------- */
/*  Generated by Enterprise Architect Version 12.0 		*/
/*  Created On : 05-May-2023 1:40:18 PM 				*/
/*  DBMS       : PostgreSQL 						*/
/* ---------------------------------------------------- */

/* Drop Tables */

DROP TABLE IF EXISTS "user" CASCADE
;

DROP TABLE IF EXISTS "survey_data" CASCADE
;

DROP TABLE IF EXISTS "skill_set" CASCADE
;

DROP TABLE IF EXISTS "right" CASCADE
;

DROP TABLE IF EXISTS "project_type" CASCADE
;

DROP TABLE IF EXISTS "project_tech" CASCADE
;

DROP TABLE IF EXISTS "project_feedback" CASCADE
;

DROP TABLE IF EXISTS "project" CASCADE
;

DROP TABLE IF EXISTS "practice" CASCADE
;

DROP TABLE IF EXISTS "level" CASCADE
;

DROP TABLE IF EXISTS "group_right" CASCADE
;

DROP TABLE IF EXISTS "group" CASCADE
;

DROP TABLE IF EXISTS "evaluation_level" CASCADE
;

DROP TABLE IF EXISTS "employee_status" CASCADE
;

DROP TABLE IF EXISTS "employee_skill" CASCADE
;

DROP TABLE IF EXISTS "employee_level" CASCADE
;

DROP TABLE IF EXISTS "employee_evaluation" CASCADE
;

DROP TABLE IF EXISTS "employee" CASCADE
;

DROP TABLE IF EXISTS "business_unit" CASCADE
;

DROP TABLE IF EXISTS "business_domain" CASCADE
;

/* Create Tables */

CREATE TABLE "user"
(
	"id" SERIAL NOT NULL,
	"name" varchar(100)	 NOT NULL,
	"email" varchar(50)	 NOT NULL,
	"group_id" integer NOT NULL,
	"created_by" varchar(50)	 NOT NULL,
	"created_date" date NOT NULL,
	"updated_by" varchar(50)	 NULL,
	"updated_date" date NULL
)
;

CREATE TABLE "survey_data"
(
	"id" SERIAL NOT NULL,
	"start_time" date NOT NULL,
	"completion_time" date NOT NULL,
	"email" varchar(50)	 NULL,
	"name" varchar(50)	 NULL,
	"employee_id" varchar(50)	 NOT NULL,
	"full_name" varchar(100)	 NOT NULL,
	"current_address" varchar(200)	 NULL,
	"english" varchar(100)	 NULL,
	"japanese" varchar(50)	 NULL,
	"certificate" varchar(50)	 NULL,
	"waterfall" integer NULL,
	"agile" integer NULL,
	"manufacturing" integer NULL
)
;

CREATE TABLE "skill_set"
(
	"id" SERIAL NOT NULL,
	"code" varchar(50)	 NOT NULL,
	"name" varchar(250)	 NULL,
	"description" varchar(50)	 NULL,
	"created_by" varchar(50)	 NOT NULL,
	"created_date" date NOT NULL,
	"updated_by" varchar(50)	 NULL,
	"updated_date" date NULL
)
;

CREATE TABLE "right"
(
	"id" SERIAL NOT NULL,
	"code" varchar(50)	 NOT NULL,
	"module" varchar(200)	 NULL,
	"created_by" varchar(50)	 NOT NULL,
	"created_date" date NOT NULL,
	"updated_by" varchar(50)	 NULL,
	"updated_date" date NULL
)
;

CREATE TABLE "project_type"
(
	"id" SERIAL NOT NULL,
	"code" varchar(50)	 NOT NULL,
	"name" varchar(250)	 NULL,
	"created_by" varchar(50)	 NOT NULL,
	"created_date" date NOT NULL,
	"updated_by" varchar(50)	 NULL,
	"updated_date" date NULL
)
;

CREATE TABLE "project_tech"
(
	"id" SERIAL NOT NULL,
	"project_id" integer NOT NULL,
	"skill_set_id" integer NOT NULL,
	"created_by" varchar(50)	 NOT NULL,
	"created_date" date NOT NULL,
	"updated_by" varchar(50)	 NULL,
	"updated_date" date NULL
)
;

CREATE TABLE "project_feedback"
(
	"id" SERIAL NOT NULL,
	"project_id" integer NOT NULL,
	"employee_id" integer NOT NULL,
	"project_manager" varchar(50)	 NOT NULL,
	"evaluation_level_id" integer NULL,
	"feedback" text NULL,
	"feedback_date" date NULL,
	"created_by" varchar(50)	 NOT NULL,
	"created_date" date NOT NULL,
	"updated_by" varchar(50)	 NULL,
	"updated_date" date NULL
)
;

CREATE TABLE "project"
(
	"id" SERIAL NOT NULL,
	"code" varchar(50)	 NOT NULL,    -- oracle project code
	"name" varchar(100)	 NULL,
	"description" varchar(250)	 NULL,
	"customer_name" varchar(100)	 NULL,
	"project_manager" varchar(100)	 NOT NULL,
	"business_domain_id" integer NULL,
	"project_type_id" integer NOT NULL,
	"status" smallint NOT NULL,
	"start_date" date NOT NULL,
	"end_date" date NULL,
	"created_by" varchar(50)	 NOT NULL,
	"created_date" date NOT NULL,
	"updated_by" varchar(50)	 NULL,
	"updated_date" date NULL
)
;

CREATE TABLE "practice"
(
	"id" SERIAL NOT NULL,
	"business_unit_id" integer NOT NULL,
	"code" varchar(50)	 NOT NULL,
	"name" varchar(250)	 NULL,
	"description" varchar(250)	 NULL,
	"manager" varchar(50)	 NOT NULL,
	"created_by" varchar(50)	 NOT NULL,
	"created_date" date NOT NULL,
	"updated_by" varchar(50)	 NULL,
	"updated_date" date NULL
)
;

CREATE TABLE "level"
(
	"id" SERIAL NOT NULL,
	"code" varchar(50)	 NOT NULL,
	"name" varchar(100)	 NULL,
	"description" varchar(250)	 NULL,
	"created_by" varchar(50)	 NOT NULL,
	"created_date" date NOT NULL,
	"updated_by" varchar(50)	 NULL,
	"updated_date" date NULL
)
;

CREATE TABLE "group_right"
(
	"id" SERIAL NOT NULL,
	"group_id" integer NOT NULL,
	"right_id" integer NOT NULL,
	"created_by" varchar(50)	 NOT NULL,
	"created_date" date NOT NULL,
	"updated_by" varchar(50)	 NULL,
	"updated_date" date NULL
)
;

CREATE TABLE "group"
(
	"id" SERIAL NOT NULL,
	"code" varchar(50)	 NOT NULL,
	"name" varchar(200)	 NULL,
	"created_by" varchar(50)	 NOT NULL,
	"created_date" date NOT NULL,
	"updated_by" varchar(50)	 NULL,
	"updated_date" date NULL
)
;

CREATE TABLE "evaluation_level"
(
	"id" SERIAL NOT NULL,
	"code" varchar(50)	 NOT NULL,
	"description" varchar(250)	 NULL,
	"created_by" varchar(50)	 NOT NULL,
	"created_date" date NOT NULL,
	"updated_by" varchar(50)	 NULL,
	"updated_date" date NULL
)
;

CREATE TABLE "employee_status"
(
	"status_date" date NOT NULL,
	"employee_id" integer NOT NULL,
	"status" smallint NULL
)
;

CREATE TABLE "employee_skill"
(
	"id" SERIAL NOT NULL,
	"employee_id" integer NOT NULL,
	"skill_set_id" integer NULL,
	"skill_set_date" date NOT NULL,
	"skill_level" integer NULL,
	"created_by" varchar(50)	 NOT NULL,
	"created_date" date NOT NULL,
	"updated_by" varchar(50)	 NULL,
	"updated_date" date NULL
)
;

CREATE TABLE "employee_level"
(
	"id" SERIAL NOT NULL,
	"employee_id" integer NOT NULL,
	"level_id" integer NOT NULL,
	"level_date" date NOT NULL,
	"created_by" varchar(50)	 NOT NULL,
	"created_date" date NOT NULL,
	"updated_by" varchar(50)	 NULL,
	"updated_date" date NULL
)
;

CREATE TABLE "employee_evaluation"
(
	"id" SERIAL NOT NULL,
	"employee_id" integer NOT NULL,
	"evaluation_date" date NOT NULL,
	"evaluation_info" text NULL,
	"evaluator_id" integer NOT NULL,
	"created_by" varchar(50)	 NOT NULL,
	"created_date" date NOT NULL,
	"updated_by" varchar(50)	 NULL,
	"updated_date" date NULL
)
;

CREATE TABLE "employee"
(
	"id" SERIAL NOT NULL,
	"ldap" varchar(50)	 NOT NULL,
	"hcc_id" varchar(50)	 NOT NULL,
	"name" varchar(100)	 NOT NULL,
	"email" varchar(50)	 NOT NULL,
	"legal_entity_hire_date" date NOT NULL,
	"business_unit_id" integer NOT NULL,
	"location_id" integer NOT NULL,
	"created_by" varchar(50)	 NOT NULL,
	"created_date" date NOT NULL,
	"updated_by" varchar(50)	 NULL,
	"updated_date" date NULL
)
;

CREATE TABLE "business_unit"
(
	"id" SERIAL NOT NULL,
	"code" varchar(10)	 NOT NULL,
	"name" varchar(50)	 NULL,
	"description" varchar(250)	 NULL,
	"manager" varchar(50)	 NOT NULL,
	"created_by" varchar(50)	 NOT NULL,
	"created_date" date NOT NULL,
	"updated_by" varchar(50)	 NULL,
	"updated_date" date NULL
)
;

CREATE TABLE "business_domain"
(
	"id" SERIAL NOT NULL,
	"code" varchar(50)	 NOT NULL,
	"name" varchar(250)	 NULL,
	"description" text NULL,
	"practice_id" integer NOT NULL,
	"created_by" varchar(50)	 NOT NULL,
	"created_date" date NOT NULL,
	"updated_by" varchar(50)	 NULL,
	"updated_date" date NULL
)
;

/* Create Table Comments, Sequences for Autointeger Columns */

COMMENT ON COLUMN "project"."code"
	IS 'oracle project code'
;

COMMENT ON TABLE "evaluation_level"
	IS '1 - Limited knowledge 2 - Limited ability to perform 3 - Can perform with assistance 4 - Can perform without assistance 5 - Can give expert advice and lead other'
;

/* Create Primary Keys, Indexes, Uniques, Checks */

ALTER TABLE "user" ADD CONSTRAINT "PK_user"
	PRIMARY KEY ("id")
;

CREATE INDEX "IXFK_user_group" ON "user" ("group_id" ASC)
;

ALTER TABLE "survey_data" ADD CONSTRAINT "PK_SurveyData"
	PRIMARY KEY ("id")
;

ALTER TABLE "skill_set" ADD CONSTRAINT "PK_skill_set"
	PRIMARY KEY ("id")
;

ALTER TABLE "skill_set" ADD CONSTRAINT "UNIQ_skill_set_code" UNIQUE ("code")
;

ALTER TABLE "right" ADD CONSTRAINT "PK_right"
	PRIMARY KEY ("id")
;

ALTER TABLE "project_type" ADD CONSTRAINT "PK_project_type"
	PRIMARY KEY ("id")
;

ALTER TABLE "project_type" ADD CONSTRAINT "UNIQ_project_type_code" UNIQUE ("code")
;

ALTER TABLE "project_tech" ADD CONSTRAINT "PK_project_tech"
	PRIMARY KEY ("id")
;

CREATE INDEX "IXFK_Project_Tech_Project" ON "project_tech" ("project_id" ASC)
;

CREATE INDEX "IXFK_Project_Tech_Skill_set" ON "project_tech" ("skill_set_id" ASC)
;

ALTER TABLE "project_feedback" ADD CONSTRAINT "PK_project_feedback"
	PRIMARY KEY ("id")
;

CREATE INDEX "IXFK_Project_feedback_Employee" ON "project_feedback" ("employee_id" ASC)
;

CREATE INDEX "IXFK_project_feedback_evaluation_level" ON "project_feedback" ("evaluation_level_id" ASC)
;

CREATE INDEX "IXFK_Project_feedback_Project" ON "project_feedback" ("project_id" ASC)
;

ALTER TABLE "project" ADD CONSTRAINT "PK_project"
	PRIMARY KEY ("id")
;

ALTER TABLE "project" ADD CONSTRAINT "UNIQ_project_code" UNIQUE ("code")
;

CREATE INDEX "IXFK_Project_BusinessDomain" ON "project" ("business_domain_id" ASC)
;

CREATE INDEX "IXFK_Project_ProjectType" ON "project" ("project_type_id" ASC)
;

ALTER TABLE "practice" ADD CONSTRAINT "PK_Practice"
	PRIMARY KEY ("id")
;

ALTER TABLE "practice" ADD CONSTRAINT "UNIQ_practice_code" UNIQUE ("code")
;

CREATE INDEX "IXFK_Practice_BusinessUnit" ON "practice" ("business_unit_id" ASC)
;

ALTER TABLE "level" ADD CONSTRAINT "PK_level"
	PRIMARY KEY ("id")
;

ALTER TABLE "level" ADD CONSTRAINT "UNIQ_level_code" UNIQUE ("code")
;

ALTER TABLE "group_right" ADD CONSTRAINT "PK_group_right"
	PRIMARY KEY ("id")
;

CREATE INDEX "IXFK_group_right_group" ON "group_right" ("group_id" ASC)
;

CREATE INDEX "IXFK_group_right_right" ON "group_right" ("right_id" ASC)
;

ALTER TABLE "group" ADD CONSTRAINT "PK_group"
	PRIMARY KEY ("id")
;

ALTER TABLE "evaluation_level" ADD CONSTRAINT "PK_evaluation_level"
	PRIMARY KEY ("id")
;

ALTER TABLE "evaluation_level" ADD CONSTRAINT "UNIQ_evaluation_level_code" UNIQUE ("code")
;

ALTER TABLE "employee_status" ADD CONSTRAINT "PK_employee_status"
	PRIMARY KEY ("status_date")
;

CREATE INDEX "IXFK_employee_status_employee" ON "employee_status" ("employee_id" ASC)
;

ALTER TABLE "employee_skill" ADD CONSTRAINT "PK_EmployeeSkill"
	PRIMARY KEY ("id")
;

CREATE INDEX "IXFK_employee_skill_employee" ON "employee_skill" ("employee_id" ASC)
;

CREATE INDEX "IXFK_employee_skill_skill_set" ON "employee_skill" ("skill_set_id" ASC)
;

ALTER TABLE "employee_level" ADD CONSTRAINT "PK_Employee_level"
	PRIMARY KEY ("id")
;

CREATE INDEX "IXFK_Employee_level_Employee" ON "employee_level" ("employee_id" ASC)
;

CREATE INDEX "IXFK_Employee_level_level" ON "employee_level" ("level_id" ASC)
;

ALTER TABLE "employee_evaluation" ADD CONSTRAINT "PK_employee_evaluation"
	PRIMARY KEY ("id")
;

CREATE INDEX "IXFK_employee_evaluation_employee" ON "employee_evaluation" ("employee_id" ASC)
;

CREATE INDEX "IXFK_employee_evaluation_evaluation_level" ON "employee_evaluation" ("evaluator_id" ASC)
;

ALTER TABLE "employee" ADD CONSTRAINT "PK_Employee"
	PRIMARY KEY ("id")
;

ALTER TABLE "employee" ADD CONSTRAINT "UNIQ_ldap" UNIQUE ("ldap")
;

ALTER TABLE "employee" ADD CONSTRAINT "UNIQ_hcc_id" UNIQUE ("hcc_id")
;

ALTER TABLE "employee" ADD CONSTRAINT "UNIQ_email" UNIQUE ("email")
;

CREATE INDEX "IXFK_employee_business_unit" ON "employee" ("business_unit_id" ASC)
;

ALTER TABLE "business_unit" ADD CONSTRAINT "PK_BusinessUnit"
	PRIMARY KEY ("id")
;

ALTER TABLE "business_unit" ADD CONSTRAINT "UNIQ_business_unit_code" UNIQUE ("code")
;

ALTER TABLE "business_domain" ADD CONSTRAINT "PK_BusinessDomain"
	PRIMARY KEY ("id")
;

ALTER TABLE "business_domain" ADD CONSTRAINT "UNIQ_business_domain_code" UNIQUE ("code")
;

CREATE INDEX "IXFK_BusinessDomain_Practice" ON "business_domain" ("practice_id" ASC)
;

/* Create Foreign Key Constraints */

ALTER TABLE "user" ADD CONSTRAINT "FK_user_group"
	FOREIGN KEY ("group_id") REFERENCES "group" ("id") ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE "project_tech" ADD CONSTRAINT "FK_Project_Tech_Project"
	FOREIGN KEY ("project_id") REFERENCES "project" ("id") ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE "project_tech" ADD CONSTRAINT "FK_Project_Tech_Skill_set"
	FOREIGN KEY ("skill_set_id") REFERENCES "skill_set" ("id") ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE "project_feedback" ADD CONSTRAINT "FK_Project_feedback_Employee"
	FOREIGN KEY ("employee_id") REFERENCES "employee" ("id") ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE "project_feedback" ADD CONSTRAINT "FK_project_feedback_evaluation_level"
	FOREIGN KEY ("evaluation_level_id") REFERENCES "evaluation_level" ("id") ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE "project_feedback" ADD CONSTRAINT "FK_Project_feedback_Project"
	FOREIGN KEY ("project_id") REFERENCES "project" ("id") ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE "project" ADD CONSTRAINT "FK_Project_BusinessDomain"
	FOREIGN KEY ("business_domain_id") REFERENCES "business_domain" ("id") ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE "project" ADD CONSTRAINT "FK_Project_ProjectType"
	FOREIGN KEY ("project_type_id") REFERENCES "project_type" ("id") ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE "practice" ADD CONSTRAINT "FK_Practice_BusinessUnit"
	FOREIGN KEY ("business_unit_id") REFERENCES "business_unit" ("id") ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE "group_right" ADD CONSTRAINT "FK_group_right_right"
	FOREIGN KEY ("right_id") REFERENCES "right" ("id") ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE "employee_status" ADD CONSTRAINT "FK_employee_status_employee"
	FOREIGN KEY ("employee_id") REFERENCES "employee" ("id") ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE "employee_skill" ADD CONSTRAINT "FK_employee_skill_employee"
	FOREIGN KEY ("employee_id") REFERENCES "employee" ("id") ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE "employee_skill" ADD CONSTRAINT "FK_employee_skill_skill_set"
	FOREIGN KEY ("skill_set_id") REFERENCES "skill_set" ("id") ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE "employee_level" ADD CONSTRAINT "FK_Employee_level_Employee"
	FOREIGN KEY ("employee_id") REFERENCES "employee" ("id") ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE "employee_level" ADD CONSTRAINT "FK_Employee_level_level"
	FOREIGN KEY ("level_id") REFERENCES "level" ("id") ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE "employee_evaluation" ADD CONSTRAINT "FK_employee_evaluation_employee"
	FOREIGN KEY ("employee_id") REFERENCES "employee" ("id") ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE "employee_evaluation" ADD CONSTRAINT "FK_employee_evaluation_evaluation_level"
	FOREIGN KEY ("evaluator_id") REFERENCES "evaluation_level" ("id") ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE "employee" ADD CONSTRAINT "FK_employee_business_unit"
	FOREIGN KEY ("business_unit_id") REFERENCES "business_unit" ("id") ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE "business_domain" ADD CONSTRAINT "FK_BusinessDomain_Practice"
	FOREIGN KEY ("practice_id") REFERENCES "practice" ("id") ON DELETE Cascade ON UPDATE Cascade
;
